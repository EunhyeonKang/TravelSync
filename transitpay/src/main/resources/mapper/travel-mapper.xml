<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hanacard.transitpay.travel.model.dao.TravelRepository">
    <resultMap id="handleSearchRequest" type="com.hanacard.transitpay.travel.model.dto.TravelInfo">
        <collection property="travelPlaces" ofType="java.util.List" resultMap="placeResultMap"/>
        <collection property="travelPlace" ofType="java.util.List"/>
    </resultMap>

    <resultMap id="placeResultMap" type="java.util.Map">
        <result column="place1" property="place1" />
        <result column="place2" property="place2" />
    </resultMap>

    <select id="handleSearchRequest" resultType="com.hanacard.transitpay.travel.model.dto.TravelInfo">
        SELECT *
        FROM travelinfo
        WHERE
        <if test="travelPlaces.size() > 0">
            <foreach collection="travelPlaces" item="place" separator=" OR " open="(" close=")">
                SUBSTR(location, 1, INSTR(location, ' ') - 1) LIKE '%'||#{place.place1}||'%'
                AND SUBSTR(location, INSTR(location, ' ') + 1) LIKE '%'||#{place.place2}||'%'
                AND (content LIKE '%'||#{searchText}||'%'
                OR tags LIKE '#'||#{searchText}||'%')
            </foreach>
        </if>
        <if test="travelPlace.size() > 0">
            <foreach collection="travelPlace" item="place" separator=" OR " open="(" close=")">
                SUBSTR(location, 1, INSTR(location, ' ') - 1) LIKE '%'||#{place}||'%'
                AND (content LIKE '%'||#{searchText}||'%'
                OR tags LIKE '#'||#{searchText}||'%')
            </foreach>
        </if>
    </select>
    <select id="getItemDetailsById" resultType="com.hanacard.transitpay.travel.model.dto.TravelInfo">
        SELECT *
        FROM travelInfo
        WHERE t_num = #{itemId}
    </select>
    <select id="selectPlaceSearch" resultType="java.lang.String" parameterType="java.lang.String">
        SELECT DISTINCT location
        FROM travelInfo
        WHERE location IS NOT NULL
        AND location LIKE '%'|| #{searchText} ||'%'
    </select>

    <select id="selectTravelPlans" resultType="com.hanacard.transitpay.travel.model.dto.Travel">
        SELECT *
        FROM travel
        WHERE travel_title = #{travelTitle}
    </select>

    <insert id="insertTravelAndGetId">
        INSERT INTO travel (travel_id, travel_title, travel_start, travel_end, travel_place, d_day, group_id)
        VALUES (travel_id_seq.nextval, #{travelTitle}, #{travelStart}, #{travelEnd}, #{travelPlaceJson}, #{dDay}, #{groupId})
    </insert>

    <insert id="insertScheduleSets">
        INSERT INTO SCHEDULE (SCHEDULE_ID,SCHEDULE_DATE,START_PLACE,END_PLACE,START_PLACE_X,START_PLACE_Y,END_PLACE_X,END_PLACE_Y,TRAVEL_TITLE)
        VALUES (schedule_id_seq.nextval,#{scheduleDate},#{travelTitle},#{travelTitle1},#{startPlaceX},#{startPlaceY},#{endPlaceX},#{endPlaceY},#{title})
    </insert>

    <!-- select는 별칭을 지어줘야함 -->
    <resultMap id="ScheduleList" type="com.hanacard.transitpay.travel.model.dto.ScheduleSet">
        <result column="SCHEDULE_ID" property="scheduleId" />
        <result column="SCHEDULE_DATE" property="scheduleDate" />
        <result column="START_PLACE" property="travelTitle" />
        <result column="END_PLACE" property="travelTitle1" />
        <result column="START_PLACE_X" property="startPlaceX" />
        <result column="START_PLACE_Y" property="startPlaceY" />
        <result column="END_PLACE_X" property="endPlaceX" />
        <result column="END_PLACE_Y" property="endPlaceY" /> <!-- 수정된 부분 -->
        <result column="TRAVEL_TITLE" property="title" />
    </resultMap>
    <select id="handleTrafficData" resultMap="ScheduleList">
        SELECT *
        FROM SCHEDULE
        WHERE TRAVEL_TITLE = #{title}
    </select>

    <select id="selectTravelInfoById" resultType="com.hanacard.transitpay.travel.model.dto.TravelInfo">
        SELECT *
        FROM travelInfo
        where t_num = #{itemId}
    </select>
    <select id="selectCostEffectiveTravel" resultType="com.hanacard.transitpay.travel.model.dto.TravelInfo">
        SELECT *
        FROM (
                 SELECT t.*, ROWNUM AS rnum
                 FROM (
                          SELECT *
                          FROM travelInfo
                          WHERE tags LIKE '%' || #{categoryName} || '%'
                      ) t
                 WHERE ROWNUM &lt;= #{endRow}
             )
        WHERE rnum &gt;= #{startRow}
    </select>
    <select id="selectAllTravel" resultType="com.hanacard.transitpay.travel.model.dto.TravelInfo">
        select * from travelInfo
        SELECT *
        FROM (
                 SELECT t.*, ROWNUM AS rnum
                 FROM
                 WHERE ROWNUM &lt;= #{endRow}
             )
        WHERE rnum &gt;= #{startRow}
    </select>
    <update id="updateLikeCount">
        UPDATE travelInfo
        SET likecount = #{likeCount}
        WHERE t_num = #{t_num}
    </update>
    <insert id="insertSchedule">
        INSERT INTO SCHEDULE (SCHEDULE_ID,PNUM,SCHEDULE_DATE,SCHEDULE_PLACE,PRICE,PLACE_X,PLACE_Y,category,TRAVEL_ID)
        VALUES (schedule_id_seq.nextval,#{pnum},#{schedule_date},#{schedule_place},#{price},#{placeX},#{placeY},#{category},#{travelId})
    </insert>
    <insert id="insertScheduleTotalAmount">
        INSERT INTO SCHEDULE_AMOUNT(SCHEDULE_AMOUNT,food_Expenses,accommodation_Expenses,etc_Expenses,TRAVEL_ID)
        VALUES (schedule_amount_seq.nextval,#{food_expenses},#{accommodation_expenses},#{etc_expenses},#{travelId})
    </insert>
    <select id="selectSchedule" resultType="int">
        select travel_id from travel where group_id = #{param1} and travel_title =#{param2}
    </select>
    <select id="selectMygroupTravelList" resultType="com.hanacard.transitpay.travel.model.dto.MyGroupTravelInfo">
        SELECT
            t.travel_id AS travelId,
            t.travel_title AS travelTitle,
            t.travel_start AS travelStart,
            t.travel_end AS travelEnd,
            t.travel_place AS travelPlace,
            t.d_day AS dDay,
            g.group_id AS groupId,
            g.group_name AS groupName,
            g.group_type AS groupType,
            g.group_account AS groupAccount,
            g.group_use AS groupUse,
            g.account_num AS accountNum,
            g.group_leader AS groupLeader,
            gm.group_member_type AS groupMemberType,
            gm.pw_state AS pwState
        FROM
            travel t
            RIGHT JOIN group_member gm ON t.group_id = gm.group_id
            JOIN groups g ON gm.group_id = g.group_id
        WHERE gm.member_id = #{memberId} and t.travel_id is not null
    </select>
    <select id="selectMygroupSchedule" resultType="com.hanacard.transitpay.travel.model.dto.Schedule">
        SELECT distinct
            s.schedule_id AS schedule_id,
            s.pnum AS pnum,
            s.schedule_date AS schedule_date,
            s.schedule_place AS schedule_place,
            s.price AS price,
            s.place_x AS placeX,
            s.place_y AS placeY,
            s.category AS category,
            s.travel_id AS travelId,
            sa.food_expenses AS food_expenses,
            sa.accommodation_expenses AS accommodation_expenses,
            sa.etc_expenses AS etc_expenses
        FROM schedule s
                 JOIN schedule_amount sa ON s.travel_id = sa.travel_id
        WHERE s.travel_id = #{travelId}
        ORDER BY pnum, schedule_date
    </select>
    <insert id="insertBookmarkTraveling">
        insert into favorite_travel values(favorite_id_seq.nextval,#{param2},#{param1})
    </insert>
    <select id="selectBookmarkTravelList" resultType="com.hanacard.transitpay.travel.model.dto.TravelInfo">
        select ti.* from travelinfo ti
        join favorite_travel ft
        on ti.t_num = ft.t_num where ft.member_id = #{memberId}
    </select>
    <select id="selectTravelNoti" resultType="com.hanacard.transitpay.travel.model.dto.MyGroupTravelInfo">
        SELECT distinct
            g.group_name AS groupName,
            g.group_account AS groupAccount,
            t.travel_id AS travelId,
            t.travel_title AS travelTitle,
            t.travel_start AS travelStart,
            t.travel_end AS travelEnd,
            t.d_day AS dDay,
            t.group_id AS groupId,
            s.food_expenses AS food_expenses,
            s.accommodation_expenses AS accommodation_expenses,
            s.etc_expenses AS etc_expenses,
            n.amount AS amount
        FROM travel t
                 JOIN schedule_amount s ON t.travel_id = s.travel_id
                 JOIN notification n ON t.group_id = n.group_id
                 JOIN groups g ON t.group_id = g.group_id
        WHERE n.member_id=#{param1} and n.group_id =#{param3} and t.travel_id=#{param2}
    </select>
    <select id="selectNoti">
        select
            m.kakao_img,
            m.name,
            n.amount
        from member m join notification n on m.member_id = n.member_id
        where group_id = #{groupId}
    </select>
    <select id="selectSheduleAmount" resultType="_int">
        select distinct (food_expenses+accommodation_expenses+etc_expenses) AS total
        from schedule_amount
        where travel_id=#{travelId}
    </select>
    <select id="selectNotificationHistoryTravel" resultType="com.hanacard.transitpay.travel.model.dto.Schedule">
        SELECT
            group_id AS groupId,
            travel_id AS travelId,
--             SUM(amount) AS price
            TO_NUMBER(TO_CHAR(ROUND(SUM(amount), 0), 'FM999999')) AS price
        FROM notification_history
        WHERE travel_id = #{travelId}
        GROUP BY group_id, travel_id
    </select>
    <select id="complateBalanceAccounts">
        SELECT distinct m.name AS name,
                        gm.group_id AS group_id,
                        nh.travel_id AS travel_id,
                        nh.amount AS amount
        FROM member m
                 JOIN group_member gm ON m.member_id = gm.member_id
                 JOIN notification_history nh ON gm.group_id = nh.group_id
        WHERE nh.travel_id = #{travelId}
    </select>
    <select id="selectMemberNotificationHistory">
        select
            food_expenses,
            accommodation_expenses,
            etc_expenses,
            nh.travel_id AS travelId,
            nh.group_id AS groupId
        from schedule_amount sa join notification_history nh on sa.travel_id = nh.travel_id where nh.member_id=#{memberId}
    </select>
    <select id="completeCalculateTravel" resultType="_int">
        SELECT COUNT(DISTINCT travel_id) AS group_count
        FROM notification_history
        where member_id =#{memberId}
    </select>
</mapper>